# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12RLCj0wh5hXeU0mCuQ_qj4cQAUFikWDV
"""

from google.colab import files
uploaded = files.upload()

#importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#loading data
train_data = pd.read_csv('train-data.csv')
test_data = pd.read_csv('test-data.csv')

#dropping unnecessary columns and removing the null and na values
train_data.drop(['Unnamed: 0'],axis=1,inplace=True)
test_data.drop(['Unnamed: 0'],axis=1,inplace=True)

train_data.drop(['New_Price'],axis=1,inplace=True)
test_data.drop(['New_Price'],axis=1,inplace=True)

train_data.drop(['Power'],axis=1,inplace=True)
test_data.drop(['Power'],axis=1,inplace=True)

train_data.dropna(axis=0,how='any',inplace=True)
test_data.dropna(axis=0,how='any',inplace=True)

#removing the white spaces in the names and removing the units in the columns and converting them into floats
train_data['Name'] = train_data['Name'].str.split(' ', expand = True)
train_data['Name'] = train_data['Name'].replace('ISUZU', 'Isuzu') 

train_data['Mileage'] = train_data['Mileage'].str.split(' ', expand = True)
train_data['Mileage'] = train_data['Mileage'].astype(float)

train_data['Engine'] = train_data['Engine'].str.split(' ', expand = True)
train_data['Engine'] = train_data['Engine'].astype(float)

test_data['Name'] = test_data['Name'].str.split(' ', expand = True)
test_data['Name'] = test_data['Name'].replace('ISUZU', 'Isuzu') 

test_data['Mileage'] = test_data['Mileage'].str.split(' ', expand = True)
test_data['Mileage'] = test_data['Mileage'].astype(float)

test_data['Engine'] = test_data['Engine'].str.split(' ', expand = True)
test_data['Engine'] = test_data['Engine'].astype(float)

#grouping unqiue values of the categprical variables
name = (list(train_data['Name'].unique())).sort()
location = (list(train_data['Location'].unique())).sort()
fuel_type = (list(train_data['Fuel_Type'].unique())).sort()
transmission = (list(train_data['Transmission'].unique())).sort()
owner_type = (list(train_data['Owner_Type'].unique())).sort()

namewise = train_data.groupby('Name').mean()
namewise.drop('Year', axis = 1, inplace = True)
indice = list(namewise.index)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = namewise['Kilometers_Driven'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = namewise['Mileage'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = namewise['Engine'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = namewise['Seats'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = namewise['Price'], ax = ax)

location = train_data.groupby('Location').mean()
location.drop('Year', axis = 1, inplace = True)
indice = list(location.index)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = location['Kilometers_Driven'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = location['Mileage'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = location['Engine'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = location['Seats'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = location['Price'], ax = ax)

fuel_type = train_data.groupby('Fuel_Type').mean()
fuel_type.drop('Year', axis = 1, inplace = True)
indice = list(fuel_type.index)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = fuel_type['Kilometers_Driven'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = fuel_type['Mileage'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = fuel_type['Engine'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = fuel_type['Seats'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = fuel_type['Price'], ax = ax)

transmission = train_data.groupby('Transmission').mean()
transmission.drop('Year', axis = 1, inplace = True)
indice = list(transmission.index)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = transmission['Kilometers_Driven'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = transmission['Mileage'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = transmission['Engine'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = transmission['Seats'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = transmission['Price'], ax = ax)

owner_type = train_data.groupby('Owner_Type').mean()
owner_type.drop('Year', axis = 1, inplace = True)
indice = list(owner_type.index)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = owner_type['Kilometers_Driven'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = owner_type['Mileage'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = owner_type['Engine'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = owner_type['Seats'], ax = ax)

fig, ax = plt.subplots()
fig.set_size_inches(10, 10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=40, ha="right")
sns.barplot(x = indice, y = owner_type['Price'], ax = ax)

sns.pairplot(train_data)